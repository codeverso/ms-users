name: Java CI with Maven

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        database-name:
        - users
        database-password:
        - root
        database-user:
        - admin
        database-host:
        - 127.0.0.1
        database-port:
        - 5432
        
    services:
      ms-users-api:
        image: ghcr.io/codeverso/ms-users:latest
        ports: 
          - 8080:8080
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ matrix.database-name }}
          POSTGRES_USER: ${{ matrix.database-user }}
          POSTGRES_PASSWORD: ${{ matrix.database-password }}
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        
    steps:
      - uses: actions/checkout@v3
 
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Wait for the database to start
        run: wget -qO- https://raw.githubusercontent.com/eficode/wait-for/$WAIT_FOR_VERSION/wait-for | sh -s -- http://localhost:8080/users -t 30 -- echo "Backend is up"
        env:
          WAIT_FOR_VERSION: 4df3f9262d84cab0039c07bf861045fbb3c20ab7
      
      - name: Run migrations
        run: mvn flyway:migrate -Dflyway.url=jdbc:postgresql://localhost:5432/users -Dflyway.user=admin -Dflyway.password=root

      - name: Build with Maven
        run: mvn clean test

      - name: Setup Java Environment
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: curl
        uses: wei/curl@v1
        with:
          args: -X GET http://localhost:8080/users
